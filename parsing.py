import csv
from typing import Any
from data_hadler import days_for_week


def get_info_work_day() -> list[dict[str | Any, str | Any]]:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ—Ç–æ–º –ø—Ä–æ—Ö–æ–¥–∏—å—Å—è –ø–æ
    csv —Ñ–∞–π–ª—É –∏ –ø–æ–º–µ—â–∞–µ—Ç –≤ js —Ñ–∞–π–ª
    :param user: –∫–∞–∫ –∑–∞–ø–∏—Å–∞–Ω –≤ exel —Ñ–∞–π–ª–µ 
    :return:
    """
    name_file = 'data_base'
    js = []
    with open(f'{name_file}.csv', newline='', encoding='utf-8') as File:
        reader = csv.reader(File)
        for row in reader:
            js.append({
                '#': row[0].replace('\n', ' '),
                'Program': row[1].replace('\n', ' '),
                'Modul': row[2].replace('\n', ' '),
                'Data': row[3],
                'Time': row[4].replace(' ', '').replace('.', ':'),
                'Watch': row[5].replace('\n', ' '),
                'Item': row[6].replace('\n', ' '),
                'Comment': row[8].replace('\n', ' '),
                'Teacher': row[7].replace('\n', ' '),
                'Note': row[9],
                'Audience': row[10].replace('\n', ' '),
                'Webinar link': row[11].replace('\n', ' '),
                'Link to post': row[12].replace('\n', ' '),
                'Operator': row[13].replace('\n', ' '),
                'Account': row[14].replace('\n', ' '),
                'Hours': row[4]
            })
    return js


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–µ—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–∞—Ç—É

def data_formating(date_ : str) -> str:
    """ –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–Ω–æ–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
    Args:
        date_ = –¥–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–µ–¥—à–∞—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    Returns:
        date - –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ 
    """
    date_split = date_.split('.')
    date = f'{date_split[2]}-{date_split[1]}-{date_split[0]}'
    return date 

# –í—ã–≤–æ–¥ 
def show_zoom(work_day):
                description_for_show_work_day = (
                f"üë®–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:"
                f" {(work_day['Teacher'])}\nüóì–î–∞—Ç–∞: "
                f"{work_day['Data']}\nüïê–í—Ä–µ–º—è: {work_day['Time']}\n‚ùó–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {work_day['Note']}\nüìå–û–ø–µ—Ä–∞—Ç–æ—Ä:"
                f" {work_day['Operator']}\nüîí–ê–∫–∫–∞—É–Ω—Ç: {work_day['Account']}.")
                return description_for_show_work_day

def split_user_zoom(user_name):
    if '|' in user_name:
        user_name_split = user_name.split('|')
        return user_name_split
    else:
        [user_name]


def get_info_zooms(user_name, day_:str = 'current'):
    list_zooms = []
    user_name = split_user_zoom(user_name)
    date_ = days_for_week(argument=day_)
    data = get_info_work_day()
    if user_name == None:
        return ['–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!!!']
    for i in data:
        if i["Operator"] in user_name:
            print(i['Operator'])
            print(data_formating(i['Data']))
            if str(date_) == data_formating(i['Data']):
                list_zooms.append(show_zoom(i))
    if not list_zooms:
        return ['–£ –≤–∞—Å –≤—ã—Ö–æ–¥–Ω–æ–π!']
    return list_zooms


def show_current_week():
    pass





